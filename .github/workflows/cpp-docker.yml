name: C/C++ CI docker

on: [workflow_dispatch]

jobs:
  build:
    strategy:
      matrix:
        include:
        - os: ubuntu:20.04
          dockerfile: Dockerfile
          arch: amd64

    runs-on: ${{ matrix.os }}
    
    steps:
    - name: Remove unnecessary directories to free up space
      if: runner.os != 'Windows'
      run: |
        sudo rm -rf /opt/hostedtoolcache/CodeQL
        sudo rm -rf /usr/local/lib/android/sdk/ndk
        sudo rm -rf /usr/share/dotnet


    - uses: actions/checkout@v4
    - run: git fetch --prune --unshallow --tags

    - name: Build an image from Dockerfile
      run: |
        docker info
        docker build -t docker.io/${{ github.repository }}:${{ github.base_ref || github.ref_name }}-${{ matrix.arch }} -f ${{ matrix.dockerfile }} --build-arg CROSSCOMPILER=${{ matrix.crosscompiler }} --build-arg ARCH=${{ matrix.arch }} --build-arg IMAGE=${{ matrix.image }} .

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Push to Container Registry
      run: |
        docker push docker.io/${{ github.repository }}:${{ github.base_ref || github.ref_name }}-${{ matrix.arch }} 

  multiarch:
    needs: build
    runs-on: ubuntu-latest
    steps:
    
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Publish multiarch image
      env:
        DOCKER_CLI_EXPERIMENTAL: enabled
      run: | 
        docker info
        export TAG=${{ github.base_ref || github.ref_name }}
        export MANIFEST=${TAG}
        [ "$TAG" == "master" ] && export MANIFEST=latest 
        docker manifest create --amend docker.io/${{ github.repository }}:${MANIFEST} docker.io/${{ github.repository }}:${TAG}-amd64 docker.io/${{ github.repository }}:${TAG}-armv7l docker.io/${{ github.repository }}:${TAG}-armv6l docker.io/${{ github.repository }}:${TAG}-windows docker.io/${{ github.repository }}:${TAG}-arm64
        docker manifest annotate docker.io/${{ github.repository }}:${MANIFEST} docker.io/${{ github.repository }}:${TAG}-armv7l --os linux --arch arm --variant v7
        docker manifest annotate docker.io/${{ github.repository }}:${MANIFEST} docker.io/${{ github.repository }}:${TAG}-armv6l --os linux --arch arm --variant v6l
        docker manifest push docker.io/${{ github.repository }}:${MANIFEST} -p
